


--TOTAL CASES VS TOTAL DEATHS and 
-- shows likelihood of dying if you contract COVID 
 SELECT location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 AS percentage_deaths FROM `portfolio-362615.covid_data.covid_deaths` 
  ORDER BY percentage_deaths DESC
 LIMIT 100;

--Looking at countries with highest infection rate
  SELECT location,population, MAX(total_cases) AS Highest_infection_count,MAX(total_deaths) AS Highest_deaths, MAX((total_cases/population))*100 AS percentage_population_infected FROM `portfolio-362615.covid_data.covid_deaths` 
  GROUP BY location,population
  ORDER BY percentage_population_infected DESC
 LIMIT 100;

--Countries with HIGHEST DEATH counts per population
  SELECT DISTINCT location, MAX(total_deaths) AS Highest_deaths 
  FROM `portfolio-362615.covid_data.covid_deaths` 
  WHERE location IS NOT NULL AND continent IS NOT NULL
  GROUP BY location
  ORDER BY Highest_deaths DESC
 LIMIT 100;

 --GLOBAL DEATH RATES
  SELECT SUM (new_cases) AS Total_cases, SUM(new_deaths) AS Total_deaths, SUM(new_deaths)/SUM(new_cases)*100 as Death_percentage 
  FROM `portfolio-362615.covid_data.covid_deaths` 
  WHERE location IS NOT NULL AND continent IS NOT NULL
     LIMIT 100;

  --Looking at total populations VS Vaccinations using CTE
 WITH popVSvacc AS ( SELECT d.continent,d.location,d.date,d.population,v.new_vaccinations,
  SUM(v.new_vaccinations) OVER(PARTITION BY d.location ORDER BY d.location,d.date ASC) AS Rolling_sum_vaccinations
 FROM `portfolio-362615.covid_data.covid_deaths` AS d
  JOIN `portfolio-362615.covid_data.covid_vaccinations` AS v
  ON d.location =v.location AND d.date=v.date
  WHERE d.location IS NOT NULL AND d.continent IS NOT NULL
  ORDER BY 2,3
 )
 SELECT *,(Rolling_sum_vaccinations/population)*100 AS Rolling_vaccination_percentage
 FROM popVSvacc;

  --Looking at total populations VS Vaccinations using TEMP TABLE usable in SSMS (SQL SERVER MANAGEMENT STUDIO)
DROP TABLE IF EXISTS rolling_percent_vaccinated
 CREATE TABLE rolling_percent_vaccinated
 (
   continent nvarchar(255),
   location nvarchar(255),
   date datetime,
   population numeric,
   new_vaccinations numeric,
   Rolling_sum_vaccinations numeric
 )
 
 INSERT INTO rolling_percent_vaccinated
 SELECT d.continent,d.location,d.date,d.population,v.new_vaccinations,
  SUM(v.new_vaccinations) OVER(PARTITION BY d.location ORDER BY d.location,d.date ASC) AS Rolling_sum_vaccinations
 FROM `portfolio-362615.covid_data.covid_deaths` AS d
  JOIN `portfolio-362615.covid_data.covid_vaccinations` AS v
  ON d.location =v.location AND d.date=v.date
  WHERE d.location IS NOT NULL AND d.continent IS NOT NULL
  
 
 SELECT *,(Rolling_sum_vaccinations/population)*100 AS Rolling_vaccination_percentage
 FROM rolling_percent_vaccinated;



